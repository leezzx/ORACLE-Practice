-- INNER JOIN

SELECT *
FROM MEMBER INNER JOIN NOTICE
ON MEMBER.ID = NOTICE.WRITER_ID; -- 4개의 래코드 생성



-- OUTER JOIN : LEFT / RIGHT / FULL

SELECT *
FROM NOTICE N LEFT OUTER JOIN MEMBER M
ON N.WRITER_ID = M.ID; -- 8개의 래코드 생성

SELECT *
FROM NOTICE N FULL OUTER JOIN MEMBER M
ON N.WRITER_ID = M.ID; -- 13개의 래코드 생성

-- 필드 이름이 충돌할 때 JOIN

SELECT NOTICE.ID, NOTICE.WRITER_ID, MEMBER.NAME
FROM MEMBER INNER JOIN NOTICE
ON MEMBER.ID = NOTICE.WRITER_ID;

SELECT N.ID, N.WRITER_ID, M.NAME
FROM MEMBER M INNER JOIN NOTICE N
ON M.ID = N.WRITER_ID;

SELECT M.ID, M.NAME, COUNT(N.ID)
FROM MEMBER M LEFT OUTER JOIN NOTICE N
ON M.ID = N.WRITER_ID
GROUP BY M.ID, M.NAME; -- ID, NAME 그리고 회원별 작성한 게시글 수



-- SELF JOIN

SELECT M.*, B.NAME BOSS_NAME
FROM MEMBER M LEFT OUTER JOIN MEMBER B
ON M.BOSS_ID = B.ID; -- 사원별로 보스 정보 가져오기



-- UNION : 테이블을 단순하게 합침, 한개의 테이블로도 가능, 곂치는 건 하나로

SELECT ID, NAME FROM MEMBER
    UNION
SELECT WRITER_ID, TITLE FROM NOTICE; -- 14개 래코드

SELECT ID, NAME FROM MEMBER WHERE ID LIKE '%n%'
    UNION
SELECT ID, NAME FROM MEMBER WHERE ID LIKE '%g%'; -- 5개 래코드

-- MINUS : 겹치는 부분을 빼고 나머지

SELECT ID, NAME FROM MEMBER
    MINUS
SELECT WRITER_ID, TITLE FROM NOTICE; -- 6개 래코드

-- INTERSECT : 공통분모만 남음

SELECT ID, NAME FROM MEMBER
    INTERSECT
SELECT WRITER_ID, TITLE FROM NOTICE; -- 1개 래코드

-- UNION ALL : 모두 가져오기

SELECT ID, NAME FROM MEMBER
    UNION ALL
SELECT WRITER_ID, TITLE FROM NOTICE; -- 15개 래코드