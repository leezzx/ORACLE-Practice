SELECT HIT + 1 HIT FROM NOTICE; -- HIT값에 1을 더한 컬럼을 HIT이란 이름으로 출력
SELECT 1 + '3' FROM DUAL; -- DUAL 연산을 위한 빈 가상 테이블 생성 = 4, +는 무조건 숫자열만 더함
SELECT 1 || '3' FROM DUAL; -- ||는 문자열 더하기 = 13

SELECT NAME || '(' || ID || ')' NAME FROM MEMBER;

-- 연산자 : =, !=, ^=, <>, >, <, >=, <=, IS NULL, IS NOT NULL

SELECT * FROM NOTICE WHERE writer_id = 'newlec';
SELECT * FROM NOTICE WHERE HIT >= 0;
SELECT * FROM NOTICE WHERE FILES IS NULL;
SELECT * FROM NOTICE WHERE CONTENT IS NOT NULL;

-- 관계연산자 : NOT, AND, OR, BETWEEN, IN

SELECT * FROM NOTICE WHERE 0 <= HIT AND HIT <= 2;
SELECT * FROM NOTICE WHERE HIT BETWEEN 0 AND 2;
SELECT * FROM NOTICE WHERE HIT IN (0, 2, 7);
SELECT * FROM NOTICE WHERE HIT NOT IN (0, 2, 7);

-- 패턴 비교연산자 : LIKE, %, _

SELECT * FROM NOTICE WHERE TITLE LIKE 'J%'; -- TITLE이 J로 시작하는 것 찾기, LIKE가 중요
SELECT * FROM NOTICE WHERE TITLE LIKE 'J__________'; -- TITLE이 J로 시작하고 이후 10자리가 오는 것 찾기
SELECT * FROM NOTICE WHERE TITLE NOT LIKE 'K%';
SELECT * FROM NOTICE WHERE TITLE LIKE '%B%';

-- 정규식을 이용한 패턴 비교 : regexlib.com 참고, 정규식 만들고 Regex Tester 활용

SELECT * FROM NOTICE WHERE TITLE LIKE '%-%-%'; -- 해당 패턴 찾아서 출력
SELECT * FROM NOTICE WHERE REGEXP_LIKE(TITLE, '01[01679]-\d{3,4}-\d{4}'); -- REGEXP_LIKE : 오라클에서 제공하지 않는 정규식 사용시, ^$ : 정규식의 시작과 끝이 값과 일치해야 함을 표현
-- 이메일 패턴 정규식 만들기 : \D\w*@\D\w*.(org|net|com)

-- ROWNUM : 자동으로 순서대로 생성되는 수

SELECT * FROM NOTICE WHERE ROWNUM BETWEEN 1 AND 5; -- WHERE가 실행될 때 ROWNUM 생성, 무조건 1부터 불러와야 함
SELECT * FROM (SELECT ROWNUM NUM, NOTICE.* FROM NOTICE) -- 미리 ROWNUM을 생성하여 NUM이란 컬럼화를 함
WHERE NUM BETWEEN 6 AND 10; -- NUM을 6부터 불러오기 가능

-- DISTINCT : 중복제거

SELECT DISTINCT AGE FROM MEMBER; -- 하나의 컬럼만 가능